/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package App;

import com.digitalpersona.onetouch.DPFPDataPurpose;
import com.digitalpersona.onetouch.DPFPFeatureSet;
import com.digitalpersona.onetouch.DPFPGlobal;
import com.digitalpersona.onetouch.DPFPSample;
import com.digitalpersona.onetouch.DPFPTemplate;
import com.digitalpersona.onetouch.capture.DPFPCapture;
import com.digitalpersona.onetouch.capture.event.DPFPDataAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPDataEvent;
import com.digitalpersona.onetouch.capture.event.DPFPErrorAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPErrorEvent;
import com.digitalpersona.onetouch.capture.event.DPFPReaderStatusAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPReaderStatusEvent;
import com.digitalpersona.onetouch.capture.event.DPFPSensorAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPSensorEvent;
import com.digitalpersona.onetouch.processing.DPFPEnrollment;
import com.digitalpersona.onetouch.processing.DPFPFeatureExtraction;
import com.digitalpersona.onetouch.processing.DPFPImageQualityException;
import com.digitalpersona.onetouch.verification.DPFPVerification;
import java.awt.Image;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import servicios.Conexion;
import servicios.Escribir;
import servicios.Leer;
import servicios.configuracionSoftware;
import servicios.login;

/**
 *
 * @author Mauricio
 */
public final class principal extends javax.swing.JFrame {

    Conexion cc = new Conexion();
    Connection cn = cc.conexion();

    public ResultSet rs = null;
    public String sql = null;
    public Statement st = null;
    //Inicio variables para el lector     
    private final DPFPCapture Lector = DPFPGlobal.getCaptureFactory().createCapture();
    private DPFPEnrollment Reclutador = DPFPGlobal.getEnrollmentFactory().createEnrollment();
    private DPFPVerification Verificador = DPFPGlobal.getVerificationFactory().createVerification();
    private DPFPTemplate template;
    public static String TEMPLATE_PROPERTY = "template";

    public principal() {
        initComponents();
        this.setSize(850, 500);
        this.setLocationRelativeTo(null);
        ocultarOpcIndices();
        ocultarPnConfig();
        ocultarPnAdministrar();
        ocultarPnAdmin();
        ocultarPnEnroll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HuellaDedos = new javax.swing.ButtonGroup();
        pnAdministrar = new javax.swing.JPanel();
        btnCreateUsers1 = new javax.swing.JLabel();
        btnCreateUsers = new javax.swing.JLabel();
        btnKeys = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtSede = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDir = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cboPrograma = new javax.swing.JComboBox();
        btnGuardarConfig = new javax.swing.JButton();
        btnCancelarConfig = new javax.swing.JButton();
        pnConfig = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        btnIngresar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtpassword = new javax.swing.JPasswordField();
        pnAdmin = new javax.swing.JPanel();
        pnContentEnroll = new javax.swing.JPanel();
        lblImagenHuella = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        lblEstadohuellas = new javax.swing.JLabel();
        opcIndice2 = new javax.swing.JRadioButton();
        opcIndice = new javax.swing.JRadioButton();
        jPlogo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblUser1 = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        jpMenu = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnAdministrar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnAdministrar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCreateUsers1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCreateUsers1.setForeground(new java.awt.Color(33, 66, 149));
        btnCreateUsers1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/software.png"))); // NOI18N
        btnCreateUsers1.setText("Configurar Software");
        btnCreateUsers1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCreateUsers1MouseClicked(evt);
            }
        });
        pnAdministrar.add(btnCreateUsers1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 140, -1));

        btnCreateUsers.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCreateUsers.setForeground(new java.awt.Color(33, 66, 149));
        btnCreateUsers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/addUser.png"))); // NOI18N
        btnCreateUsers.setText("Crear Usuarios");
        btnCreateUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCreateUsersMouseClicked(evt);
            }
        });
        pnAdministrar.add(btnCreateUsers, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 140, -1));

        btnKeys.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnKeys.setForeground(new java.awt.Color(33, 66, 149));
        btnKeys.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/keys.png"))); // NOI18N
        btnKeys.setText("Generar Id Software");
        btnKeys.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnKeysMouseClicked(evt);
            }
        });
        pnAdministrar.add(btnKeys, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 140, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Configurar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(33, 66, 149))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(33, 66, 149));
        jLabel7.setText("Sede:");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 60, -1));
        jPanel2.add(txtSede, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 190, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(33, 66, 149));
        jLabel8.setText("Dirección:");
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 80, -1));
        jPanel2.add(txtDir, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 190, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(33, 66, 149));
        jLabel6.setText("Programa:");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 80, -1));

        cboPrograma.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione", "Aplicacion", "Dispensación" }));
        jPanel2.add(cboPrograma, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 190, -1));

        btnGuardarConfig.setText("Guardar");
        btnGuardarConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarConfigActionPerformed(evt);
            }
        });
        jPanel2.add(btnGuardarConfig, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, -1));

        btnCancelarConfig.setText("Cancelar");
        jPanel2.add(btnCancelarConfig, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, -1, -1));

        pnAdministrar.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 350, 300));

        getContentPane().add(pnAdministrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 710, 440));

        pnConfig.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnConfig.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Ingresar", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(33, 66, 149))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(33, 66, 149));
        jLabel4.setText("Usuario:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(33, 66, 149));
        jLabel5.setText("Contraseña:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));

        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });
        jPanel1.add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 150, -1));

        btnIngresar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnIngresar.setForeground(new java.awt.Color(33, 66, 149));
        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnIngresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, -1, -1));

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(33, 66, 149));
        btnCancelar.setText("Cancelar");
        jPanel1.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, -1, -1));
        jPanel1.add(txtpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 150, -1));

        pnConfig.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 360, 250));

        getContentPane().add(pnConfig, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 710, 440));

        pnAdmin.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnAdmin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(pnAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 710, 440));

        pnContentEnroll.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnContentEnroll.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblImagenHuella.setBackground(new java.awt.Color(255, 255, 255));
        lblImagenHuella.setOpaque(true);
        pnContentEnroll.add(lblImagenHuella, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 160, 180));

        txtArea.setColumns(20);
        txtArea.setRows(5);
        jScrollPane1.setViewportView(txtArea);

        pnContentEnroll.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, 320, 70));

        lblEstadohuellas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEstadohuellas.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        pnContentEnroll.add(lblEstadohuellas, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 320, 20));

        HuellaDedos.add(opcIndice2);
        opcIndice2.setActionCommand("2");
        opcIndice2.setEnabled(false);
        opcIndice2.setOpaque(false);
        pnContentEnroll.add(opcIndice2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, -1, 20));

        HuellaDedos.add(opcIndice);
        opcIndice.setActionCommand("1");
        opcIndice.setEnabled(false);
        opcIndice.setOpaque(false);
        opcIndice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcIndiceActionPerformed(evt);
            }
        });
        pnContentEnroll.add(opcIndice, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, -1, -1));

        getContentPane().add(pnContentEnroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 710, 440));

        jPlogo.setBackground(new java.awt.Color(255, 255, 255));
        jPlogo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPlogo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/medexl.png"))); // NOI18N
        jPlogo.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 60));

        lblUser1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUser1.setForeground(new java.awt.Color(33, 66, 149));
        lblUser1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblUser1.setText("Usuario:");
        jPlogo.add(lblUser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 90, 20));

        lblUser.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUser.setForeground(new java.awt.Color(33, 66, 149));
        lblUser.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jPlogo.add(lblUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 0, 250, 20));

        getContentPane().add(jPlogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 62));

        jpMenu.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jpMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/home.png"))); // NOI18N
        jpMenu.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jpMenu.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(33, 66, 149));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/config.png"))); // NOI18N
        jLabel3.setText("Configuracion");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jpMenu.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 110, -1));

        getContentPane().add(jpMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 140, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void opcIndiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcIndiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opcIndiceActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

//         txtArea.setEditable(false);
//        Iniciar();
//        start();
//        EstadoHuellas();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        String user = txtUser.getText();
        String pass = new String(txtpassword.getPassword());
        if (user.equals("")) {
            JOptionPane.showMessageDialog(null, "El campo usuario no debe estar vacio");
            txtUser.requestFocus();
        } else if (pass.equals("")) {
            JOptionPane.showMessageDialog(null, "El campo contraseña no debe estar vacio");
            txtpassword.requestFocus();
        } else {
            try {
                login lg = new login();
                if (lg.verificarUser(user, pass)) {
                    if (lg.getUser().equals("admin") && lg.getPassword().equals("openEHR2008")) {
                        Leer le = new Leer();
                        if (!le.leer().equals("Error al leer")){
                          btnKeys.setVisible(false);
                        }
                        pnAdministrar.setVisible(true);
                    } else {
                        pnAdmin.setVisible(true);
                    }
                    pnConfig.setVisible(false);
                    pnContentEnroll.setVisible(false);
                    lblUser.setText(lg.getUser());
                } else {
                    JOptionPane.showMessageDialog(null, "Datos incorrectos");
                }
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void btnKeysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnKeysMouseClicked
        Escribir es = new Escribir();
        if (es.escribir()){
          btnKeys.setVisible(false);
        }
        
    }//GEN-LAST:event_btnKeysMouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        pnConfig.setVisible(true);
        ocultarPnEnroll();
        ocultarPnAdministrar();
        ocultarPnAdmin();
        limpiarLogin();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8MouseClicked

    private void btnGuardarConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarConfigActionPerformed
        String sede = txtSede.getText();
        String direccion = txtDir.getText();
        String programa = (String) cboPrograma.getSelectedItem();
        if (sede.equals("")) {
            JOptionPane.showMessageDialog(null, "El campo sede no debe estar vacio");
            txtUser.requestFocus();
        } else if (direccion.equals("")) {
            JOptionPane.showMessageDialog(null, "El campo direccion no debe estar vacio");
            txtpassword.requestFocus();
        }
        else if (programa.equals("Seleccione")) {
            JOptionPane.showMessageDialog(null, "El campo programa no debe estar vacio");
            txtpassword.requestFocus();
        }else {
            try {
                Leer le = new Leer();
                configuracionSoftware cf = new configuracionSoftware(le.leer(), sede, direccion, programa);
                if (cf.addConfig()){
                  JOptionPane.showMessageDialog(null, "Se ha configurado el programa con exito");
                }               
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }    
    }//GEN-LAST:event_btnGuardarConfigActionPerformed

    private void btnCreateUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateUsersMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCreateUsersMouseClicked

    private void btnCreateUsers1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateUsers1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCreateUsers1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup HuellaDedos;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCancelarConfig;
    private javax.swing.JLabel btnCreateUsers;
    private javax.swing.JLabel btnCreateUsers1;
    private javax.swing.JButton btnGuardarConfig;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JLabel btnKeys;
    private javax.swing.JComboBox cboPrograma;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPlogo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jpMenu;
    private javax.swing.JLabel lblEstadohuellas;
    private javax.swing.JLabel lblImagenHuella;
    private javax.swing.JLabel lblUser;
    private javax.swing.JLabel lblUser1;
    private javax.swing.JRadioButton opcIndice;
    private javax.swing.JRadioButton opcIndice2;
    private javax.swing.JPanel pnAdmin;
    private javax.swing.JPanel pnAdministrar;
    private javax.swing.JPanel pnConfig;
    private javax.swing.JPanel pnContentEnroll;
    private javax.swing.JTextArea txtArea;
    private javax.swing.JTextField txtDir;
    private javax.swing.JTextField txtSede;
    private javax.swing.JTextField txtUser;
    private javax.swing.JPasswordField txtpassword;
    // End of variables declaration//GEN-END:variables

    //Inicio metodo Start
    protected void Iniciar() {
        Lector.addDataListener(new DPFPDataAdapter() {
            @Override
            public void dataAcquired(final DPFPDataEvent e) {
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        EnviarTexto("La Huella Digital ha sido Capturada");
                        try {
                            ProcesarCaptura(e.getSample());
                        } catch (IOException ex) {
                            System.out.println("error: " + ex);
                        } catch (SQLException ex) {
                            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });
            }
        });

        Lector.addReaderStatusListener(new DPFPReaderStatusAdapter() {
            @Override
            public void readerConnected(final DPFPReaderStatusEvent e) {
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        EnviarTexto("El Sensor de Huella Digital esta Activado o Conectado");
                    }
                });
            }

            @Override
            public void readerDisconnected(final DPFPReaderStatusEvent e) {
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        EnviarTexto("El Sensor de Huella Digital esta Desactivado o no Conectado");
                    }
                });
            }
        });

        Lector.addSensorListener(new DPFPSensorAdapter() {
            @Override
            public void fingerTouched(final DPFPSensorEvent e) {
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        EnviarTexto("El dedo ha sido colocado sobre el Lector de Huella");
                    }
                });
            }

            @Override
            public void fingerGone(final DPFPSensorEvent e) {
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        EnviarTexto("El dedo ha sido quitado del Lector de Huella");
                    }
                });
            }
        });

        Lector.addErrorListener(new DPFPErrorAdapter() {
            public void errorReader(final DPFPErrorEvent e) {
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {
                        EnviarTexto("Error: " + e.getError());
                    }
                });
            }
        });
    }
    //Fin metodo Start

    //Inicio variables para la extraccion de caracteristicas huella
    public DPFPFeatureSet featuresinscripcion;
    public DPFPFeatureSet featuresverificacion;
    //Fin variables para la extraccion de caracteristicas huella

    //Inicio metodo procesar captura
    public void ProcesarCaptura(DPFPSample sample) throws IOException, SQLException, InterruptedException {
        String id = "";
//        sql = "SELECT numero_documento FROM tercero WHERE numero_documento = '" + txtId.getText() + "'";
//        st = cn.createStatement();
//        rs = st.executeQuery(sql);
//        if (rs.next()) {
//            id = rs.getString("numero_documento");
//        }
//        if (txtId.getText().equals("")) {
//            JOptionPane.showMessageDialog(null, "El campo identificacion no debe estar vacio");
//            txtId.requestFocus();
//        } else if (txtId.getText().equals(id)) {
        // Procesar la muestra de la huella y crear un conjunto de características con el propósito de inscripción.
        featuresinscripcion = extraerCaracteristicas(sample, DPFPDataPurpose.DATA_PURPOSE_ENROLLMENT);
        // Procesar la muestra de la huella y crear un conjunto de características con el propósito de verificacion.
        featuresverificacion = extraerCaracteristicas(sample, DPFPDataPurpose.DATA_PURPOSE_VERIFICATION);
        // Comprobar la calidad de la muestra de la huella y lo añade a su reclutador si es bueno
        if (featuresinscripcion != null) {
            try {
//                    System.out.println("Las Caracteristicas de la Huella han sido creada");
                Reclutador.addFeatures(featuresinscripcion);// Agregar las caracteristicas de la huella a la plantilla a crear
                // Dibuja la huella dactilar capturada.
                Image image = CrearImagenHuella(sample);
                DibujarHuella(image);
            } catch (DPFPImageQualityException ex) {
                System.err.println("Error: " + ex.getMessage());
            } finally {
                EstadoHuellas();
                // Comprueba si la plantilla se ha creado.
                switch (Reclutador.getTemplateStatus()) {
                    case TEMPLATE_STATUS_READY:	// informe de éxito y detiene  la captura de huellas
                        stop();
                        setTemplate(Reclutador.getTemplate());
                        EnviarTexto("La Plantilla de la Huella ha Sido Creada, ya puede Verificarla o Identificarla");
                        guardarHuella();
                        EstadoHuellas();
//                        btnGuardar.setEnabled(true);
//                        btnGuardar.grabFocus();
                        break;
                    case TEMPLATE_STATUS_FAILED: // informe de fallas y reiniciar la captura de huellas
                        Reclutador.clear();
                        stop();
                        EstadoHuellas();
                        setTemplate(null);
                        JOptionPane.showMessageDialog(this, "La Plantilla de la Huella no pudo ser creada, Repita el Proceso", "Inscripcion de Huellas Dactilares", JOptionPane.ERROR_MESSAGE);
                        start();
                        break;
                }
            }
        }
//        } else {
//            JOptionPane.showMessageDialog(null, "El usuario con número de documento: " + id + " no se encuentra registrado");
//        }

    }
    //Fin metodo procesar captura

    //Inicio metodo extraer caracteristicas huella
    public DPFPFeatureSet extraerCaracteristicas(DPFPSample sample, DPFPDataPurpose purpose) {
        DPFPFeatureExtraction extractor = DPFPGlobal.getFeatureExtractionFactory().createFeatureExtraction();
        try {
            return extractor.createFeatureSet(sample, purpose);
        } catch (DPFPImageQualityException e) {
            return null;
        }
    }
    //fin metodo extraer caracteristicas huella

    //Inicio metodo CrearImagenHuella
    public Image CrearImagenHuella(DPFPSample sample) {
        return DPFPGlobal.getSampleConversionFactory().createImage(sample);
    }
      //fin metodo CrearImagenHuella

    //inicio metodo dibujar huella en el label
    public void DibujarHuella(Image image) {
        lblImagenHuella.setIcon(new ImageIcon(
                image.getScaledInstance(lblImagenHuella.getWidth(), lblImagenHuella.getHeight(), Image.SCALE_DEFAULT)));
        repaint();
    }
        //Fin metodo dibujar huella en el label

    //inicio metodos abstractos
    public void EstadoHuellas() {
        EnviarTexto2("Muestra restantes Necesarias para Guardar Template " + Reclutador.getFeaturesNeeded());
    }

    public void EnviarTexto(String string) {
        txtArea.append(string + "\n");
    }

    public void EnviarTexto2(String string) {
        lblEstadohuellas.setText(string);
    }

    public void start() {
        Lector.startCapture();
        EnviarTexto("Utilizando el Lector de Huella Dactilar ");
    }

    public void stop() {
        Lector.stopCapture();
        EnviarTexto("No se está usando el Lector de Huella Dactilar ");
    }

    public DPFPTemplate getTemplate() {
        return template;
    }

    public void setTemplate(DPFPTemplate template) {
        DPFPTemplate old = this.template;
        this.template = template;
        firePropertyChange(TEMPLATE_PROPERTY, old, template);
    }

    //Fin metodos abstractos
    public void guardarHuella() throws InterruptedException {
//        String id = txtId.getText();
        try {
            ByteArrayInputStream datosHuella = new ByteArrayInputStream(template.serialize());
            Integer tamañoHuella = template.serialize().length;
            String opc = HuellaDedos.getSelection().getActionCommand();
            String sql = "";
            String dedo = "";
            switch (opc) {
                case "1":
                    sql = "INSERT INTO huellas (huella) VALUES (?)";

                    break;
                case "2":
                    sql = "UPDATE tercero SET indice_i = ? WHERE (numero_documento = ?)";
                    dedo = "Indice Izquierdo guardado";
                    break;
            }

            try ( //establece la conexion con la BD
                    PreparedStatement guardarStmt = cn.prepareStatement(sql)) {
                guardarStmt.setBinaryStream(1, datosHuella, tamañoHuella);

                //Ejecuta la sentencia
                guardarStmt.execute();
//                opcIndice2.setSelected(true);
//                opcIndice.setSelected(false);
            }
            lblImagenHuella.setVisible(true);
            jLabel1.setVisible(false);
            cc.desconectar();
            Reclutador.clear();//limpia el reclutador
            lblImagenHuella.setIcon(new ImageIcon(getClass().getResource("/Imagenes/fingerPrint.png")));//pone la lbl en blanco
            stop();

        } catch (SQLException ex) {
            //Si ocurre un error lo indica en la consola
            System.err.println("Error al guardar los datos de la huella. " + ex);
        }
    }

    private void ocultarOpcIndices() {
        opcIndice.setVisible(false);
        opcIndice2.setVisible(false);
    }

    private void ocultarPnConfig() {
        pnConfig.setVisible(false);
    }

    private void ocultarPnEnroll() {
        pnContentEnroll.setVisible(false);
    }

    private void ocultarPnAdministrar() {
        pnAdministrar.setVisible(false);
    }

    private void ocultarPnAdmin() {
        pnAdmin.setVisible(false);
    }

    private void limpiarLogin() {
        txtUser.setText("");
        txtpassword.setText("");
    }
}
